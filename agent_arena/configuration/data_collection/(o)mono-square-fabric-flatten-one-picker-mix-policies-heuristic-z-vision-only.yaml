### Vision-based Pick and Place
### Suitable for:
### (1) Action-conditioned Video Prediction
### (2) Behaviour Cloning (Superivsed Learning)
### (3) Offline Inverse Reinforcement Learning
### (4) Offline Reinforcement Learning with Sparse Rewards
### (5) Offline Reinforcement Learning with Dense Rewards but only for flattening
### (6) Vision-based Goal-condition Reinforcement Learning

### Cannot do:
### (1) Offline Reinforcement Learning with Dense Rewards for foldings.

num_episodes: 5 # 400000
random_seed: 0

environment:  'mono-square-fabric-sim|task:diagonal-folding,observation:RGB-D,action:pick-and-place-z(1),initial:flatten,horizon:20'

policies:
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:random
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:corner-biased
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:expert-flattening-random-folding

  # - sim_rect_fabric_expert_pick_and_place_flattening_with_z_one_picker
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:expert-rectangular-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:expert-side-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:expert-double-side-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:expert-cross-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:expert-double-side-rectangular-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:expert-double-side-cross-folding

  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:expert-diagonal-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:expert-one-corner-inward-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:expert-double-corner-inward-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:expert-all-corner-inward-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:expert-diagonal-cross-folding
  

  # - sim_rect_fabric_noisy_expert_pick_and_place_flattening_with_z_one_picker

  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:noisy-expert-rectangular-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:noisy-expert-side-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:noisy-expert-double-side-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:noisy-expert-cross-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:noisy-expert-double-side-rectangular-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:noisy-expert-double-side-cross-folding


  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:noisy-expert-diagonal-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:noisy-expert-one-corner-inward-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:noisy-expert-double-corner-inward-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:noisy-expert-all-corner-inward-folding
  - oracle-rect-fabric|action:pick-and-place-z(1),strategy:noisy-expert-diagonal-cross-folding


  - mix_policy:
    policy_weights: [
      # 0.1 Random, 0.2 Corner-biased Random, 0.14 expert flatten random folding
      0.1, 0.2, 0.15,

      # 0.22 expert policies
      0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,

      # 0.22 expert noisy folding policy
      0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025
    ]
    action_dim: [1, 6]

policies_ratio: [
    # 0.1 Random, 0.2 Corner-biased Random, 0.14 expert flatten random folding
    0.1, 0.1, 0.15,

    # 0.22 expert policies
    0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,

    # 0.22 expert noisy folding policy
    0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,

    # Mix
    0.1
]

# policies_ratio: [
#   0, 0, 0,
#   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#   1]


## Save success as true for only expert policies if it achieves its goal.
save_names: [
  'rgb', 'depth', 'mask', 
  'action', 'action_type',
  'normalised_coverage',
  'success', 'policy']

save_types: [
  'uint8', 'float16', 'bool', 
  'float16', 'uint8',
  'float16',
  'bool', 'unit8']

save_dimensions: [
  [128, 128, 3], [128, 128, 1], [128, 128, 1], 
  
  [1, 6], [1],
  
  [1], 
  
  [1], [1]]

save_steps: [
  21, 21, 21, 
  20, 20,
  21,
  1, 1]


